Leetcode 
Ten : Duc Thang


182. Duplicate Emails
https://leetcode.com/problems/duplicate-emails

select email from Person 
Group by email
Having Count(email) > 1;

-------------------------------------------------------------------------------------------------------------------------------------------
183. Customers Who Never Order
https://leetcode.com/problems/customers-who-never-order

select A.name AS 'Customers' 
from Customers A left join Orders B on A.id = B.customerID
where B.id is null;
-------------------------------------------------------------------------------------------------------------------------------------------
196. Delete Duplicate Emails
https://leetcode.com/problems/delete-duplicate-emails

DELETE p1 FROM Person p1,
    Person p2
WHERE
    p1.Email = p2.Email AND p1.Id > p2.Id
-------------------------------------------------------------------------------------------------------------------------------------------
197. Rising Temperature
https://leetcode.com/problems/rising-temperature/

select B.id from Weather A , Weather B where DATEDIFF(B.recordDate,A.recordDate) = 1 and B.temperature > A.temperature;

-------------------------------------------------------------------------------------------------------------------------------------------
511. Game Play Analysis I
Lần đầu đăng nhập trong game
https://leetcode.com/problems/game-play-analysis-i

SELECT
  A.player_id,
  MIN(A.event_date) AS first_login
FROM
  Activity A
GROUP BY
  A.player_id;
-------------------------------------------------------------------------------------------------------------------------------------------

512. Game Play Analysis II
https://leetcode.com/problems/game-play-analysis-ii

SELECT player_id, device_id
FROM Activity
WHERE (player_id, event_date) IN (
SELECT player_id, MIN(event_date)
FROM Activity
GROUP BY player_id
)

-------------------------------------------------------------------------------------------------------------------------------------------
577. Employee Bonus
https://leetcode.com/problems/employee-bonus/

SELECT 
    A.name,
    b.bonus
FROM Employee AS A LEFT JOIN Bonus AS b
ON e.empId = b.empId
WHERE b.bonus < 1000 OR b.bonus IS NULL 

-------------------------------------------------------------------------------------------------------------------------------------------
584. Find Customer Referee
https://leetcode.com/problems/find-customer-referee

select name  from Customer where referee_id = 0 or name = (select name from Customer 
Group by referee_id 
having Count(referee_id) < 2 
);

-------------------------------------------------------------------------------------------------------------------------------------------
586. Customer Placing the Largest Number of Orders
https://leetcode.com/problems/customer-placing-the-largest-number-of-orders

SELECT
    customer_number
FROM
    orders
GROUP BY customer_number
ORDER BY COUNT(*) DESC
LIMIT 1
;

-------------------------------------------------------------------------------------------------------------------------------------------
595. Big Countries
https://leetcode.com/problems/big-countries

select name  , population , area from World where area >= 3000000  or population >= 25000000;

-------------------------------------------------------------------------------------------------------------------------------------------

596. Classes More Than 5 Students
https://leetcode.com/problems/classes-more-than-5-students

select DISTINCT (class) 
from Courses
where class = (select class  from Courses 
Group by class
having count(student) > 5
);

-------------------------------------------------------------------------------------------------------------------------------------------
597. Friend Requests I: Overall Acceptance Rate
https://leetcode.com/problems/friend-requests-i-overall-acceptance-rate

-------------------------------------------------------------------------------------------------------------------------------------------
607. Sales Person
https://leetcode.com/problems/sales-person

SELECT
    s.name
FROM
    salesperson s
WHERE
    s.sales_id NOT IN (SELECT
            o.sales_id
        FROM
            orders o
                LEFT JOIN
            company c ON o.com_id = c.com_id
        WHERE
            c.name = 'RED')
;


-------------------------------------------------------------------------------------------------------------------------------------------
620. Not Boring Movies
https://leetcode.com/problems/not-boring-movies

select * from Cinema where id % 2 != 0 and description != 'boring'
order by rating desc;


-------------------------------------------------------------------------------------------------------------------------------------------
627. Swap Salary
https://leetcode.com/problems/swap-salary/

update Salary A , Salary B set A.sex = B.sex where A.sex != B.sex;

-------------------------------------------------------------------------------------------------------------------------------------------
1050. Actors and Directors Who Cooperated At Least Three Times
https://leetcode.com/problems/actors-and-directors-who-cooperated-at-least-three-times

select actor_id , director_id  from ActorDirector
group by actor_id,director_id
having count(timestamp) = 3;

-------------------------------------------------------------------------------------------------------------------------------------------

1148. Article Views I
https://leetcode.com/problems/article-views-i

select DISTINCT ( A.author_id) AS 'id' from Views A , Views B where A.author_id = B.viewer_id 
order by A.author_id asc; 

-------------------------------------------------------------------------------------------------------------------------------------------
1141. User Activity for the Past 30 Days I
https://leetcode.com/problems/user-activity-for-the-past-30-days-i/
SELECT activity_date AS day, COUNT(DISTINCT user_id) AS active_users
FROM Activity
WHERE activity_date > '2019-06-27' and activity_date < '2019-07-28'
GROUP BY activity_date

-------------------------------------------------------------------------------------------------------------------------------------------
181. Employees Earning More Than Their Managers
https://leetcode.com/problems/employees-earning-more-than-their-managers

SELECT
     a.NAME AS Employee
FROM Employee AS a JOIN Employee AS b
     ON a.ManagerId = b.Id
     AND a.Salary > b.Salary

-------------------------------------------------------------------------------------------------------------------------------------------
1795. Rearrange Products Table
https://leetcode.com/problems/rearrange-products-table/description/?envType=study-plan&id=sql-i

SELECT product_id,"store1" as store,store1 as price
FROM Products
WHERE store1 IS NOT NULL
UNION SELECT product_id,"store2",store2
FROM Products
WHERE store2 IS NOT NULL
UNION SELECT product_id,"store3",store3
FROM Products
WHERE store3 IS NOT NULL;

-------------------------------------------------------------------------------------------------------------------------------------------
1581. Customer Who Visited but Did Not Make Any Transactions
https://leetcode.com/problems/customer-who-visited-but-did-not-make-any-transactions/description/?envType=study-plan&id=sql-i

select customer_id, count(V.visit_id) as count_no_trans
from Visits V Left join Transactions T on V.visit_id = T.visit_id
where T.amount = 0 or T.amount is null
group by 1
order by 1;

-------------------------------------------------------------------------------------------------------------------------------------------
1141. User Activity for the Past 30 Days I
https://leetcode.com/problems/user-activity-for-the-past-30-days-i/solutions/?envType=study-plan&id=sql-i
SELECT activity_date AS day, COUNT(DISTINCT user_id) AS active_users
FROM Activity
WHERE activity_date > '2019-06-27' and activity_date < '2019-07-28'
GROUP BY activity_date